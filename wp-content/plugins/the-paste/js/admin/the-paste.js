!function i(n,r,o){function s(t,e){if(!r[t]){if(!n[t]){var a="function"==typeof require&&require;if(!e&&a)return a(t,!0);if(l)return l(t,!0);throw(a=new Error("Cannot find module '"+t+"'")).code="MODULE_NOT_FOUND",a}a=r[t]={exports:{}},n[t][0].call(a.exports,function(e){return s(n[t][1][e]||e)},a,a.exports,i,n,r,o)}return r[t].exports}for(var l="function"==typeof require&&require,e=0;e<o.length;e++)s(o[e]);return s}({1:[function(e,t,a){!function(){var l,i,n,s,a;function o(e,t){var _;this._container=e,this._target=t,this._container=l(this._container),this._target=l(this._target).addClass("pastable"),this._container.on("paste",(_=this,function(e){var t,a,i,n,r,o,s,l,p,d,u,h,c,g,m,f,b,w,v;if(_.originalEvent=null!==e.originalEvent?e.originalEvent:null,_._paste_event_fired=!0,null!=(null!=(g=e.originalEvent)?g.clipboardData:void 0))if((a=e.originalEvent.clipboardData).items){for(h=null,_.originalEvent.pastedTypes=[],o=0,p=(m=a.items).length;o<p;o++)(r=m[o]).type.match(/^text\/(plain|rtf|html)/)&&_.originalEvent.pastedTypes.push(r.type);for(t=s=0,d=(f=a.items).length;s<d;t=++s){if((r=f[t]).type.match(/^image\//)){(c=new FileReader).onload=function(e){return _._handleImage(e.target.result,_.originalEvent,h)};try{c.readAsDataURL(r.getAsFile())}catch(e){}e.preventDefault();break}"text/plain"===r.type&&(0===t&&1<a.items.length&&a.items[1].type.match(/^image\//)&&(w=!0,n=a.items[1].type),r.getAsString(function(e){return w?(h=e,_._target.trigger("pasteText",{text:e,isFilename:!0,fileType:n,originalEvent:_.originalEvent})):_._target.trigger("pasteText",{text:e,originalEvent:_.originalEvent})})),"text/rtf"===r.type&&r.getAsString(function(e){return _._target.trigger("pasteTextRich",{text:e,originalEvent:_.originalEvent})}),"text/html"===r.type&&r.getAsString(function(e){return _._target.trigger("pasteTextHtml",{text:e,originalEvent:_.originalEvent})})}}else-1!==Array.prototype.indexOf.call(a.types,"text/plain")&&(v=a.getData("Text"),setTimeout(function(){return _._target.trigger("pasteText",{text:v,originalEvent:_.originalEvent})},1)),_._checkImagesInContainer(function(e){return _._handleImage(e,_.originalEvent)});if(a=window.clipboardData)if(null!=(v=a.getData("Text"))&&v.length)setTimeout(function(){return _._target.trigger("pasteText",{text:v,originalEvent:_.originalEvent}),_._target.trigger("_pasteCheckContainerDone")},1);else{for(l=0,u=(b=a.files).length;l<u;l++)i=b[l],_._handleImage(URL.createObjectURL(i),_.originalEvent);_._checkImagesInContainer(function(e){return _._handleImage(e,_.originalEvent)})}return null}))}(l=window.jQuery).paste=function(e){return"undefined"!=typeof console&&null!==console&&console.log("DEPRECATED: This method is deprecated. Please use $.fn.pastableNonInputable() instead."),i.mountNonInputable(e)._container},l.fn.pastableNonInputable=function(){for(var e,t=0,a=this.length;t<a;t++)(e=this[t])._pastable||l(e).is("textarea, input:text, [contenteditable]")||(i.mountNonInputable(e),e._pastable=!0);return this},l.fn.pastableTextarea=function(){for(var e,t=0,a=this.length;t<a;t++)(e=this[t])._pastable||l(e).is(":not(textarea, input:text)")||(i.mountTextarea(e),e._pastable=!0);return this},l.fn.pastableContenteditable=function(){for(var e,t=0,a=this.length;t<a;t++)(e=this[t])._pastable||l(e).is(":not([contenteditable])")||(i.mountContenteditable(e),e._pastable=!0);return this},s=function(e,t){var a,i,n,r,o,s,l,p;if(null==t&&(t=512),!(s=e.match(/^data\:([^\;]+)\;base64\,(.+)$/)))return null;for((e=s)[0],s=e[1],e=e[2],n=atob(e),i=[],l=0;l<n.length;){for(p=n.slice(l,l+t),r=new Array(p.length),o=0;o<p.length;)r[o]=p.charCodeAt(o),o++;a=new Uint8Array(r),i.push(a),l+=t}return new Blob(i,{type:s})},n=function(){return l(document.createElement("div")).attr("contenteditable",!0).attr("aria-hidden",!0).attr("tabindex",-1).css({width:1,height:1,position:"fixed",left:-100,overflow:"hidden",opacity:1e-17})},a=function(e,t){var a,i,n=void 0,r=void 0,o=void 0,s=e.nodeName.toLowerCase();return"area"===s?(a=(n=e.parentNode).name,!(!e.href||!a||"map"!==n.nodeName.toLowerCase())&&(0<(r=l("img[usemap='#"+a+"']")).length&&r.is(":visible"))):(/^(input|select|textarea|button|object)$/.test(s)?(o=!e.disabled)&&(i=l(e).closest("fieldset")[0])&&(o=!i.disabled):o="a"===s&&e.href||t,(o=o||l(e).is("[contenteditable]"))&&l(e).is(":visible"))},o.prototype._target=null,o.prototype._container=null,o.mountNonInputable=function(e){var t=new o(n().appendTo(e),e);return l(e).on("click",function(e){if(!a(e.target,!1)&&!window.getSelection().toString())return t._container.focus()}),t._container.on("focus",function(){return l(e).addClass("pastable-focus")}),t._container.on("blur",function(){return l(e).removeClass("pastable-focus")})},o.mountTextarea=function(r){var a,i,e;return"undefined"!=typeof DataTransfer&&null!==DataTransfer&&DataTransfer.prototype&&null!=(e=Object.getOwnPropertyDescriptor)&&(null!=(e=e.call(Object,DataTransfer.prototype,"items"))&&e.get)?this.mountContenteditable(r):(i=new o(n().insertBefore(r),r),a=!1,l(r).on("keyup",function(e){return 17!==(e=e.keyCode)&&224!==e||(a=!1),null}),l(r).on("keydown",function(e){var t;return 17!==(t=e.keyCode)&&224!==t||(a=!0),(a=null!=e.ctrlKey&&null!=e.metaKey?e.ctrlKey||e.metaKey:a)&&86===e.keyCode&&(i._textarea_focus_stolen=!0,i._container.focus(),i._paste_event_fired=!1,setTimeout(function(){if(!i._paste_event_fired)return l(r).focus(),i._textarea_focus_stolen=!1},1)),null}),l(r).on("paste",function(){}),l(r).on("focus",function(){if(!i._textarea_focus_stolen)return l(r).addClass("pastable-focus")}),l(r).on("blur",function(){if(!i._textarea_focus_stolen)return l(r).removeClass("pastable-focus")}),l(i._target).on("_pasteCheckContainerDone",function(){return l(r).focus(),i._textarea_focus_stolen=!1}),l(i._target).on("pasteText",function(e,t){var a=l(r).prop("selectionStart"),i=l(r).prop("selectionEnd"),n=l(r).val();return l(r).val(""+n.slice(0,a)+t.text+n.slice(i)),l(r)[0].setSelectionRange(a+t.text.length,a+t.text.length),l(r).trigger("change")}))},o.mountContenteditable=function(e){new o(e,e);return l(e).on("focus",function(){return l(e).addClass("pastable-focus")}),l(e).on("blur",function(){return l(e).removeClass("pastable-focus")})},o.prototype._handleImage=function(e,i,n){var r,o,t;return e.match(/^webkit\-fake\-url\:\/\//)?this._target.trigger("pasteImageError",{message:"You are trying to paste an image in Safari, however we are unable to retieve its data."}):(this._target.trigger("pasteImageStart"),(r=new Image).crossOrigin="anonymous",r.onload=(o=this,function(){var e,t,a=document.createElement("canvas");a.width=r.width,a.height=r.height,a.getContext("2d").drawImage(r,0,0,a.width,a.height),t=null;try{t=a.toDataURL("image/png"),e=s(t)}catch(e){}return t&&o._target.trigger("pasteImage",{blob:e,dataURL:t,width:r.width,height:r.height,originalEvent:i,name:n}),o._target.trigger("pasteImageEnd")}),r.onerror=(t=this,function(){return t._target.trigger("pasteImageError",{message:"Failed to get image from: "+e,url:e}),t._target.trigger("pasteImageEnd")}),r.src=e)},o.prototype._checkImagesInContainer=function(i){for(var n,r,o=Math.floor(1e3*Math.random()),e=this._container.find("img"),t=0,a=e.length;t<a;t++)(n=e[t])["_paste_marked_"+o]=!0;return setTimeout((r=this,function(){for(var e=r._container.find("img"),t=0,a=e.length;t<a;t++)(n=e[t])["_paste_marked_"+o]||(i(n.src),l(n).remove());return r._target.trigger("_pasteCheckContainerDone")}),1)},i=o}.call(this)},{}],2:[function(e,t,a){"use strict";e("paste.js/paste.js"),e("the-paste-base.js"),e("media-view.js"),e("the-paste.js")},{"media-view.js":3,"paste.js/paste.js":1,"the-paste-base.js":4,"the-paste.js":5}],3:[function(e,t,a){"use strict";var n,r,o,s;n=jQuery,window,r=mOxie,o=wp.media.thepaste,wp.media.view.Button,wp.media.view.Modal,s=o.l10n,wp.media.thepaste.view.DataSourceImageUploader=wp.media.View.extend({template:wp.template("thepaste-uploader"),className:"thepaste-uploader",controller:null,image:null,$discardBtn:null,$uploadBtn:null,uploader:null,events:{'click [data-action="upload"]':"uploadImage",'click [data-action="discard"]':"discardImage"},initialize:function(){wp.media.View.prototype.initialize.apply(this,arguments),_.defaults(this.options,{defaultFileName:s.image});new wp.media.View({tagName:"div",className:"instruments",controller:this.controller});this.uploader=this.options.uploder},setImageData:function(e){var a=this.$imageContainer.html("").get(0),i=this,t=e.match(/data:(image\/(\w+));/)[1];return o.options.mime_types.convert[t]||(t=this.options.defaultFileFormat),this.image&&this.image.destroy(),this.image=new r.Image,this.image.onload=function(){var e=i.getUploader().getOption("resize"),t=Math.max(e.width/this.width,e.height/this.height);e&&t<1&&this.downsize(this.width*t,this.height*t),this.embed(a)},this.image.load(e),this.$imageContainer&&this.$imageContainer.append(this.image),this.$('[data-setting="format"] input[value="'+t+'"]').prop("checked",!0),this.disabled(!1),this},render:function(){return wp.media.View.prototype.render.apply(this,arguments),this.$imageContainer=this.$(".image-container"),this.$discardBtn=this.$('[data-action="discard"]'),this.$uploadBtn=this.$('[data-action="upload"]'),this.$('[data-setting="title"]').val(o.getFilename()),this},discardImage:function(){this.trigger("action:discard:dataimage",this),this.unbindUploaderEvents()},uploadImage:function(){var e=this.$('[data-setting="format"] :checked').val(),t=o.options.mime_types.convert[e],a=this.$('input[data-setting="title"]').val()+"."+t,t=this.image.getAsBlob(e,o.options.jpeg_quality);this.bindUploaderEvents(),t.detach(t.getSource()),t.name=a,t.type=e,this.getUploader().addFile(t,a),this.disabled(!0),this.trigger("action:upload:dataimage",this)},show:function(){return this.$el.show(),this},hide:function(){return this.$el.hide(),this},disabled:function(e){this.$discardBtn.prop("disabled",e),this.$uploadBtn.prop("disabled",e)},_uploadSuccessHandler:function(){this.trigger("action:uploaded:dataimage"),this.disabled(!1),this.unbindUploaderEvents()},_uploadErrorHandler:function(e,t){this.trigger("error:uploaded:dataimage",t),this.disabled(!1),this.unbindUploaderEvents()},bindUploaderEvents:function(){this.getUploader().bind("FileUploaded",this._uploadSuccessHandler,this),this.getUploader().bind("Error",this._uploadErrorHandler,this)},unbindUploaderEvents:function(){this.getUploader().unbind("FileUploaded",this._uploadSuccessHandler,this),this.getUploader().unbind("Error",this._uploadErrorHandler,this)},getUploader:function(){return this.controller.uploader.uploader.uploader}}),wp.media.thepaste.view.Pasteboard=wp.media.View.extend({template:wp.template("thepaste-pasteboard"),className:"thepaste-pasteboard",controller:null,action:"paste",$pasteboard:null,render:function(){var e=this;return wp.media.View.prototype.render.apply(this,arguments),console.log(this.$(".injector")),this.$pasteboard=this.$(".injector").pastableContenteditable(),this.$message=this.$(".message"),this.$pasteboard.on("click",function(){e.show_message("")}),this},start:function(){var a,i=this;return this.imagePasted=!1,this.$pasteboard.on("paste",function(e){a=wp.media.thepaste.clipboardHasImage(e.originalEvent.clipboardData)}).on("pasteText",function(e,t){a||i.imagePasted||(i.show_message(s.paste_error_no_image),n(this).html(""))}).on("pasteImage",function(e,t){i.imagePasted||(i.trigger("action:create:dataimage",this,t.dataURL),i.imagePasted=!0)}).on("pasteImageError",function(e,t){i.show_message(s.paste_error),n(this).html("")}),setTimeout(function(){i.$pasteboard.get(0).focus()},1),this},stop:function(){return this.$pasteboard.off("pasteImage").off("pasteImageError").off("pasteText"),this},show:function(){return this.$el.show(),this},hide:function(){return this.$el.hide(),this},show_message:function(e){this.$message.text(e)}}),wp.media.thepaste.view.DataSourceImageGrabber=wp.media.View.extend({template:wp.template("thepaste-grabber"),className:"thepaste-grabber",grabber:null,uploader:null,initialize:function(){var e=wp.media.View.prototype.initialize.apply(this,arguments);return _.defaults(this.options,{wpuploader:null,defaultFileName:this.options.default_filename,defaultFileFormat:"image/png",title:s.copy_paste}),this.grabber=new this.options.grabber({controller:this.controller}),this.uploader=new wp.media.thepaste.view.DataSourceImageUploader({controller:this.controller,uploder:this.options.wpuploader,defaultFileName:this.options.defaultFileName,defaultFileFormat:this.options.defaultFileFormat}),this.render(),this.listenTo(this.grabber,"action:create:dataimage",this.imageCreated),this.listenTo(this.uploader,"action:discard:dataimage",this.startGrabbing),e},render:function(){return wp.media.View.prototype.render.apply(this,arguments),this.$(".content").append(this.grabber.render().$el).append(this.uploader.render().$el),this},imageCreated:function(e,t){this.grabber.stop().hide(),this.uploader.show().setImageData(t)},startGrabbing:function(){return this.uploader.hide(),this.grabber.show().start(),this},stopGrabbing:function(){return this.grabber.stop(),this},getAction:function(){return this.grabber.action},dismiss:function(){return this.grabber.stop(),this}})},{}],4:[function(e,t,a){"use strict";function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}!function(p,e,d){navigator.userAgent.indexOf("Chrome");var u=0;function r(e){return("00"+e.toString()).substr(-2)}thepaste=e.thepaste=p.extend({supports:{paste:"paste"in document||"onpaste"in document||"object"===i(window.onpaste)||"onpaste"in document.createElement("DIV")},view:{},uploadImage:function(e,n,t){var r="__thepaste_box_"+u++,a=p(e).wrap('<div id="'+r+'" data-progress="0" class="thepaste-image-placeholder" contenteditable="false"></div>').parent();e.onload=function(){p(n.$("#"+r)).width(this.naturalWidth),p(n.$("#"+r)).height(this.naturalHeight)};function i(e){var t=e.match(/^data\:([^\;]+)\;/)[1],a=new d.Blob(null,{data:e});void 0===(e=thepaste.options.mime_types.convert[t])&&console.trace("Won't upload, bad mime type: "+t),a.name=thepaste.getFilename(e),a.type=t,t=function(){s.uploader.uploader.uploader.addFile(a)},s?(s.state().reset(),t()):((s=wp.media.editor.open(window.wpActiveEditor,{frame:"post",state:"insert",title:thepaste.l10n.copy_paste,multiple:!1})).close(),s.uploader.uploader&&s.uploader.uploader.ready?t():s.on("uploader:ready",t)),s.uploader.uploader.uploader.bind("UploadProgress",function(e){n.$("#"+r).attr("data-progress",e.total.percent)}),s.uploader.uploader.uploader.bind("FileUploaded",function(e,t){var a=n.$("#"+r),i='<img class="alignnone wp-image-'+t.attachment.id+' size-full" src="'+t.attachment.changed.url+'" />';a.replaceWith(i),n.$('img[src="'+l+'"]').each(function(){p(this).replaceWith(i)})}),s.uploader.uploader.uploader.bind("Error",function(e,t){console.log(e,t)})}var o,s,l=e.src,e=l.substr(0,5);return"blob:"===e?((o=new XMLHttpRequest).responseType="blob",o.onreadystatechange=function(){var e;4==o.readyState&&((e=new FileReader).onload=function(){i(e.result)},e.readAsDataURL(new Blob([o.response],{type:"image/png"})))},o.open("GET",l),o.send(null)):"data:"===e&&i(l),a},getFilename:function(e){var t=thepaste.options.default_filename,a=new Date,i=p('#post [name="post_title"]#title').val(),n=p(".display-name:first").text(),a=[{s:"%Y",r:a.getFullYear()},{s:"%y",r:a.getFullYear()%100},{s:"%m",r:r(a.getMonth()+1)},{s:"%d",r:r(a.getDate())},{s:"%e",r:a.getDate()},{s:"%H",r:r(a.getHours())},{s:"%I",r:r(a.getHours()%12)},{s:"%M",r:r(a.getMinutes())},{s:"%S",r:r(a.getSeconds())},{s:"%s",r:Math.floor(a.getTime()/1e3)}];return void 0!==i?a.push({s:"<postname>",r:i}):a.push({s:"<postname>",r:""}),void 0!==n?a.push({s:"<username>",r:n}):a.push({s:"<username>",r:""}),a.forEach(function(e){t=t.replace(e.s,e.r)}),"string"==typeof e&&(t+="."+e),t},clipboardHasImage:function(a){var i=!1;return a.items?(p.each(a.items,function(e,t){if(t.type in thepaste.options.mime_types.paste)return!(i=!0)}),i):a.types?(p.each(thepaste.options.mime_types.paste,function(e,t){if(-1<a.types.indexOf(e))return!(i=!0)}),i):null}},thepaste)}(jQuery,wp.media,mOxie)},{}],5:[function(e,t,a){"use strict";var i,n;i=jQuery,window,n=wp.media.thepaste.l10n,i.extend(wp.Uploader.prototype,{success:function(e){}}),_.extend(wp.media.view.MediaFrame.Select.prototype,{_parentInitialize:wp.media.view.MediaFrame.Select.prototype.initialize,initialize:function(){this._parentInitialize.apply(this,arguments),this.bindPasteHandlers()},_parentBrowseRouter:wp.media.view.MediaFrame.Select.prototype.browseRouter,browseRouter:function(e){this._parentBrowseRouter.apply(this,arguments),wp.media.thepaste.supports.paste&&e.set({pasteboard:{text:n.copy_paste,priority:35}})},bindPasteHandlers:function(){var t=!1;this.on("content:render close",function(e){t&&"function"==typeof t.dismiss&&t.dismiss(),void 0!==e&&(t=e)},this),this.on("content:create:pasteboard",this.contentCreatePasteboard,this),this.on("content:render:pasteboard",this.contentRenderGrabber,this),this.on("content:create:dataimage",this.contentRenderGrabber,this)},contentCreatePasteboard:function(e){this.state();this.currentPasteView=e.view=new wp.media.thepaste.view.DataSourceImageGrabber({controller:this,grabber:wp.media.thepaste.view.Pasteboard}),this.listenTo(this.currentPasteView.uploader,"action:uploaded:dataimage",this.uploadedDataImage)},contentRenderGrabber:function(e){e.startGrabbing()},uploadedDataImage:function(e){this.stopListening(this.currentPasteView.uploader,"action:uploaded:dataimage");var t={view:null};this.browseContent(t),this.content.set(t.view),this.router.get().select("browse")},imagePasted:function(){console.log(this)}}),_.extend(wp.media.view.AttachmentsBrowser.prototype,{_parentInitialize:wp.media.view.AttachmentsBrowser.prototype.initialize,initialize:function(){var e,t=this;this._parentInitialize.apply(this,arguments),this.thepaste={paste:{grabber:!1,modal:!1,mode:"paste"},current:!1},this.controller instanceof wp.media.view.MediaFrame.Select||wp.media.thepaste.supports.paste&&(e=new wp.media.view.Button({text:n.copy_paste,className:"grabber-button",priority:-64,click:function(){t.thepaste.active=t.thepaste.paste,t.thepasteOpen(n.copy_paste)}}),this.thepaste.paste.grabber=new wp.media.thepaste.view.DataSourceImageGrabber({controller:this.controller,grabber:wp.media.thepaste.view.Pasteboard,wpuploader:this.controller.uploader.uploader.uploader}),this.toolbar.set("pasteModeButton",e.render()))},thepasteOpen:function(e){var t=this;this.thepaste.modal=new wp.media.view.Modal({controller:this,title:e}),this.thepaste.modal.content(this.thepaste.active.grabber),this.thepaste.modal.open(),this.thepaste.modal.on("close",function(){t.thepasteClose(),t.thepaste.active.grabber.stopGrabbing()}),this.thepaste.active.grabber.startGrabbing(),this.listenTo(this.thepaste.active.grabber.uploader,"action:upload:dataimage",this.thepasteClose)},thepasteClose:function(){this.thepaste.modal.close(),this.stopListening(this.thepaste.active.grabber.uploader,"action:upload:dataimage")}})},{}]},{},[2]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
